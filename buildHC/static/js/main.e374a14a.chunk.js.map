{"version":3,"sources":["assets/images/logo-w.svg","Components/socket.js","Components/Chart.js","Components/PageOne.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","socket","WebSocket","ApexChart","props","state","series","options","chart","width","type","labels","responsive","breakpoint","legend","position","id","this","React","Component","PageOne","className","Container","fluid","src","logo","height","Row","Col","lg","fill","xmlns","viewBox","d","App","useState","Message","mss","useEffect","onopen","send","JSON","stringify","console","log","onmessage","event","parse","onerror","error","axios","get","then","res","persons","data","onclose","setCelce","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e374a14a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-w.4419aa9a.svg\";","export const socket = new WebSocket(`ws://64.227.107.166/wb`)","import React from 'react'\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\n\r\nclass ApexChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            series: [44, 55, 13, 43, 22],\r\n            options: {\r\n                chart: {\r\n                    width: 380,\r\n                    type: 'pie',\r\n                },\r\n                labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\r\n                responsive: [{\r\n                    breakpoint: 480,\r\n                    options: {\r\n                        chart: {\r\n                            width: 200\r\n                        },\r\n                        legend: {\r\n                            position: 'bottom'\r\n                        }\r\n                    }\r\n                }]\r\n            },\r\n\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"pie\" width={380} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ApexChart","import React from 'react'\r\nimport logo from \"../assets/images/logo-w.svg\"\r\nimport { Container, Row, Col } from \"reactstrap\"\r\nimport ApexChart from \"./Chart\"\r\n\r\n\r\nfunction PageOne() {\r\n    return (\r\n        <div>\r\n            <div className=\"header d-flex align-items-center text-white\">\r\n                <Container fluid={true}>\r\n                    <img src={logo} height=\"30px\" />\r\n                </Container>\r\n            </div>\r\n            <Container fluid={true}>\r\n                <Row className=\"pt-3\">\r\n                    <Col lg={10}>\r\n                        <div className=\"big-box\">\r\n                            <div className=\"box-header\">\r\n                                <h4>Suyun Tərkibi</h4>\r\n                            </div>\r\n                            <div className=\"box\">\r\n                                <ApexChart />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <div className=\"mini-header text-center\">\r\n                            <h5>Məlumatın tarixi</h5>\r\n                        </div>\r\n                        <ul className=\"list-ul\">\r\n                            <li className=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    <div>2020-07-06</div>\r\n                                    <div>05:30</div>\r\n                                </div>\r\n                                <div>\r\n                                    <svg fill=\"#0166ff\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 6v8h7v-2h-5v-6h-2zm10.854 7.683l1.998.159c-.132.854-.351 1.676-.652 2.46l-1.8-.905c.2-.551.353-1.123.454-1.714zm-2.548 7.826l-1.413-1.443c-.486.356-1.006.668-1.555.933l.669 1.899c.821-.377 1.591-.844 2.299-1.389zm1.226-4.309c-.335.546-.719 1.057-1.149 1.528l1.404 1.433c.583-.627 1.099-1.316 1.539-2.058l-1.794-.903zm-20.532-5.2c0 6.627 5.375 12 12.004 12 1.081 0 2.124-.156 3.12-.424l-.665-1.894c-.787.2-1.607.318-2.455.318-5.516 0-10.003-4.486-10.003-10s4.487-10 10.003-10c2.235 0 4.293.744 5.959 1.989l-2.05 2.049 7.015 1.354-1.355-7.013-2.184 2.183c-2.036-1.598-4.595-2.562-7.385-2.562-6.629 0-12.004 5.373-12.004 12zm23.773-2.359h-2.076c.163.661.261 1.344.288 2.047l2.015.161c-.01-.755-.085-1.494-.227-2.208z\" /></svg>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    <div>2020-07-06</div>\r\n                                    <div>11:23</div>\r\n                                </div>\r\n                                <div>\r\n                                    <svg fill=\"#0166ff\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 6v8h7v-2h-5v-6h-2zm10.854 7.683l1.998.159c-.132.854-.351 1.676-.652 2.46l-1.8-.905c.2-.551.353-1.123.454-1.714zm-2.548 7.826l-1.413-1.443c-.486.356-1.006.668-1.555.933l.669 1.899c.821-.377 1.591-.844 2.299-1.389zm1.226-4.309c-.335.546-.719 1.057-1.149 1.528l1.404 1.433c.583-.627 1.099-1.316 1.539-2.058l-1.794-.903zm-20.532-5.2c0 6.627 5.375 12 12.004 12 1.081 0 2.124-.156 3.12-.424l-.665-1.894c-.787.2-1.607.318-2.455.318-5.516 0-10.003-4.486-10.003-10s4.487-10 10.003-10c2.235 0 4.293.744 5.959 1.989l-2.05 2.049 7.015 1.354-1.355-7.013-2.184 2.183c-2.036-1.598-4.595-2.562-7.385-2.562-6.629 0-12.004 5.373-12.004 12zm23.773-2.359h-2.076c.163.661.261 1.344.288 2.047l2.015.161c-.01-.755-.085-1.494-.227-2.208z\" /></svg>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    <div>2020-04-03</div>\r\n                                    <div>02:10</div>\r\n                                </div>\r\n                                <div>\r\n                                    <svg fill=\"#0166ff\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 6v8h7v-2h-5v-6h-2zm10.854 7.683l1.998.159c-.132.854-.351 1.676-.652 2.46l-1.8-.905c.2-.551.353-1.123.454-1.714zm-2.548 7.826l-1.413-1.443c-.486.356-1.006.668-1.555.933l.669 1.899c.821-.377 1.591-.844 2.299-1.389zm1.226-4.309c-.335.546-.719 1.057-1.149 1.528l1.404 1.433c.583-.627 1.099-1.316 1.539-2.058l-1.794-.903zm-20.532-5.2c0 6.627 5.375 12 12.004 12 1.081 0 2.124-.156 3.12-.424l-.665-1.894c-.787.2-1.607.318-2.455.318-5.516 0-10.003-4.486-10.003-10s4.487-10 10.003-10c2.235 0 4.293.744 5.959 1.989l-2.05 2.049 7.015 1.354-1.355-7.013-2.184 2.183c-2.036-1.598-4.595-2.562-7.385-2.562-6.629 0-12.004 5.373-12.004 12zm23.773-2.359h-2.076c.163.661.261 1.344.288 2.047l2.015.161c-.01-.755-.085-1.494-.227-2.208z\" /></svg>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageOne\r\n","import React, { useEffect, useState } from 'react'\r\nimport { socket } from \"./Components/socket\"\r\nimport axios from \"axios\"\r\n// import { Container, Col, Table, Row } from \"reactstrap\"\r\n// import Thermometer from 'react-thermometer-component'\r\n// import DonutChart from 'react-donut-chart';\r\n// import ReactStoreIndicator from 'react-score-indicator'\r\nimport PageOne from './Components/PageOne'\r\n\r\nfunction App() {\r\n\r\n    const [mss] = useState({\r\n        Message: \"hi there\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        socket.onopen = () => {\r\n            socket.send(JSON.stringify(mss))\r\n            console.log(\"send -->\" + JSON.stringify(mss))\r\n\r\n        }\r\n        socket.onmessage = (event) => {\r\n            console.log(event)\r\n            console.log(JSON.parse(event))\r\n            console.log(\"received -->\" + event)\r\n        }\r\n\r\n        socket.onerror = (error) => {\r\n            console.log(error)\r\n        }\r\n\r\n        axios.get(`http://64.227.107.166/api`)\r\n            .then(res => {\r\n                const persons = res.data;\r\n                console.log(persons)\r\n                console.log(res)\r\n            })\r\n\r\n        return () => {\r\n            socket.onclose = () => {\r\n                console.log('disconnected')\r\n            }\r\n        }\r\n    }, [mss])\r\n\r\n    const [celce, setCelce] = useState(0)\r\n\r\n    setTimeout(function () { setCelce(99) }, 3000);\r\n\r\n    return (\r\n        <div>\r\n            <PageOne />\r\n            {/* <Container fluid={true}>\r\n                <Col lg={12} className=\"text-center mt-3 mb-4\">\r\n                    <h1 className=\"text-dark\">BetaX</h1>\r\n                </Col>\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div>\r\n                            asd\r\n                        </div>\r\n                        <div id=\"status-table\">\r\n                            <Table borderless>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Tarix</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th scope=\"row\">1</th>\r\n                                        <td>2020-07-6-05:30</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"thermometr\">\r\n                            <Col lg={12}>\r\n                                <h4 className=\"mb-5\">Suyun Tərkibi</h4>\r\n                            </Col>\r\n                            <Row>\r\n                                <Col lg={12}>\r\n                                    <DonutChart\r\n                                        height={300}\r\n                                        width={400}\r\n                                        data={[{\r\n                                            label: 'Çirkliliyi',\r\n                                            value: 25,\r\n                                        },\r\n                                        {\r\n                                            label: 'Turşuluğu ',\r\n                                            value: 30,\r\n                                        },\r\n                                        {\r\n                                            label: 'Duzluluğu ',\r\n                                            value: 20,\r\n                                        },\r\n                                        {\r\n                                            label: 'Sodium',\r\n                                            value: 20,\r\n                                        },\r\n                                        {\r\n                                            label: 'Alkalin',\r\n                                            value: 20,\r\n                                        },\r\n                                        {\r\n                                            label: 'NO3 mg/l',\r\n                                            value: 20,\r\n                                        },\r\n                                        {\r\n                                            label: 'Sulfat',\r\n                                            value: 20,\r\n                                        },\r\n                                        {\r\n                                            label: 'Bulanlıqlıq',\r\n                                            value: 20,\r\n                                        },\r\n                                        {\r\n                                            label: 'Xlorofil',\r\n                                            value: 20,\r\n                                        },\r\n                                        {\r\n                                            label: 'Fikosinin',\r\n                                            value: 20,\r\n                                        },\r\n                                        {\r\n                                            label: 'Ammonyak',\r\n                                            value: 20,\r\n                                        }\r\n                                        ]}\r\n                                        colors={['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4caf50', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107', '#ff9800', '#ff5722', '#795548', '#607d8b']}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-5\">\r\n                    <Col lg={12}>\r\n                        <div className=\"thermometr\">\r\n                            <Row>\r\n                                <Col lg={4} className=\"d-flex justify-content-center\">\r\n                                    <Col lg={12}>\r\n                                        <div className=\"mb-5\">\r\n                                            <h4>İstifadəyə yararlılıq dərəcəsi</h4>\r\n                                        </div>\r\n                                        <ReactStoreIndicator\r\n                                            value={celce}\r\n                                            maxValue={100}\r\n                                        />\r\n                                    </Col>\r\n                                </Col>\r\n                                <Col lg={4} className=\"text-center\">\r\n                                    <h3>Su haqqımda</h3>\r\n                                    <p>lorem ipsum dolor sit amet</p>\r\n                                </Col>\r\n                                <Col lg={4} >\r\n                                    <Col lg={12} className=\"d-flex justify-content-center align-items-center flex-column\">\r\n                                        <div className=\"mb-5\">\r\n                                            <h4>Suyun Tempraturu</h4>\r\n                                        </div>\r\n                                        <Thermometer\r\n                                            theme=\"light\"\r\n                                            value={celce}\r\n                                            max=\"100\"\r\n                                            steps=\"3\"\r\n                                            format=\"°C\"\r\n                                            size=\"large\"\r\n                                            height=\"250\"\r\n                                        />\r\n                                    </Col>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/scss/bootstrap.scss\"\nimport './assets/css/style.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}