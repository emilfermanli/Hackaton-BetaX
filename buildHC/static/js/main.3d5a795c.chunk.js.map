{"version":3,"sources":["assets/images/logo-w.svg","Components/socket.js","Components/Chart.js","Components/ChartData.js","Components/PageOne.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","socket","WebSocket","ApexChart","props","state","series","data","parseInt","Nitrite","Fikosin","Nitrate","Chlorophyll","Sulfate","No3","Sodium","Alkaline","options","chart","width","type","labels","responsive","breakpoint","legend","position","id","DataChart","name","WaterLevel","FlowRate","WaterPermeability","WaterOxygen","Blurring","SuspendedSolids","Ammonia","NitrogenDioxide","HardnessOfTheWater","ChemicalOxygenDemand","BiochemicalOxygenDemand","height","plotOptions","bar","columnWidth","endingShape","stroke","grid","row","colors","xaxis","rotate","categories","tickPlacement","fill","gradient","shade","shadeIntensity","gradientToColors","undefined","inverseColors","opacityFrom","opacityTo","stops","PageOne","console","log","className","Container","fluid","Row","Col","lg","sm","md","xs","animate","animationDuration","progress","WaterAcidity","size","progressColor","showPercentageSymbol","SalinityOfWater","WaterTemperature","style","title","src","frameBorder","border","allowFullScreen","aria-hidden","tabIndex","xmlns","viewBox","d","App","useState","setData","useEffect","onopen","onmessage","event","JSON","parse","onerror","error","onclose","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3d5a795c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-w.4419aa9a.svg\";","export const socket = new WebSocket(`ws://64.227.107.166/wb`)","import React from 'react'\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nfunction ApexChart(props) {\r\n\r\n    let state = {\r\n        series: [\r\n            props.data === null ? 0 : parseInt(props.data.Nitrite),\r\n            props.data === null ? 0 : parseInt(props.data.Fikosin),\r\n            props.data === null ? 0 : parseInt(props.data.Nitrate),\r\n            props.data === null ? 0 : parseInt(props.data.Chlorophyll),\r\n            props.data === null ? 0 : parseInt(props.data.Sulfate),\r\n            props.data === null ? 0 : parseInt(props.data.No3),\r\n            props.data === null ? 0 : parseInt(props.data.Sodium),\r\n            props.data === null ? 0 : parseInt(props.data.Alkaline)\r\n        ],\r\n        options: {\r\n            chart: {\r\n                width: 380,\r\n                type: 'pie',\r\n            },\r\n            labels: ['Nitrit', 'Fikosin', 'Nitrat', 'Xlorofil', 'Sulfat', 'No3', 'Sodium ', 'Alkalin'],\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={state.options} series={state.series} type=\"pie\" width={380} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ApexChart","import React from 'react'\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nfunction DataChart(props) {\r\n\r\n    let state = {\r\n        series: [{\r\n            name: 'Nəticə',\r\n            data: [\r\n                props.data === null ? 0 : props.data.WaterLevel,\r\n                props.data === null ? 0 : props.data.FlowRate,\r\n                props.data === null ? 0 : props.data.WaterPermeability,\r\n                props.data === null ? 0 : props.data.WaterOxygen,\r\n                props.data === null ? 0 : props.data.Blurring,\r\n                props.data === null ? 0 : props.data.Fikosin,\r\n                props.data === null ? 0 : props.data.SuspendedSolids,\r\n                props.data === null ? 0 : props.data.Ammonia,\r\n                props.data === null ? 0 : props.data.NitrogenDioxide,\r\n                props.data === null ? 0 : props.data.HardnessOfTheWater,\r\n                props.data === null ? 0 : props.data.ChemicalOxygenDemand,\r\n                props.data === null ? 0 : props.data.BiochemicalOxygenDemand]\r\n        }],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '50%',\r\n                    endingShape: 'rounded'\r\n                }\r\n            },\r\n\r\n            stroke: {\r\n                width: 2\r\n            },\r\n\r\n            grid: {\r\n                row: {\r\n                    colors: ['#fff', '#f2f2f2']\r\n                }\r\n            },\r\n            xaxis: {\r\n                labels: {\r\n                    rotate: -45\r\n                },\r\n                categories: [\r\n                    'Suyun səviyyəsi',\r\n                    'Axın sürəti',\r\n                    'Suyun xüsusi keçiriciliyi - μS/cm',\r\n                    'Həll edilmiş oksigenin miqdarı ',\r\n                    'Bulanlıqlıq',\r\n                    'Fikosinin',\r\n                    'Asılmış bərk maddələr (SS) - mg/l',\r\n                    'Ammonyak',\r\n                    'Nitrogen Dioxksid(NO2) - mg/l',\r\n                    'Codlulugu',\r\n                    'Kimyəvi oksigen  tələbi (COD) mg/l ',\r\n                    'Biokimyəvi oksigen tələbi'\r\n                ],\r\n                tickPlacement: 'on'\r\n            },\r\n\r\n            fill: {\r\n                type: 'gradient',\r\n                gradient: {\r\n                    shade: 'light',\r\n                    type: \"horizontal\",\r\n                    shadeIntensity: 0.25,\r\n                    gradientToColors: undefined,\r\n                    inverseColors: true,\r\n                    opacityFrom: 0.85,\r\n                    opacityTo: 0.85,\r\n                    stops: [50, 0, 100]\r\n                },\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={state.options} series={state.series} type=\"bar\" height={350} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataChart\r\n\r\n\r\n","import React from 'react'\r\nimport logo from \"../assets/images/logo-w.svg\"\r\nimport { Container, Row, Col } from \"reactstrap\"\r\nimport ApexChart from \"./Chart\"\r\nimport DataChart from \"./ChartData\"\r\nimport Circle from 'react-circle'\r\n\r\n\r\nfunction PageOne(props) {\r\n\r\n    const { data } = props\r\n\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"header text-white\">\r\n                <div className=\"d-flex h-100 align-items-center justify-content-evenly\">\r\n                    <h5>BetaX</h5>\r\n                </div>\r\n            </div>\r\n            <Container fluid={true}>\r\n                <Row className=\"pt-3\">\r\n                    <Col lg={10}>\r\n                        <div className=\" pt-3\">\r\n                            <div className=\"box\">\r\n                                <Row >\r\n                                    <Col lg={7} sm={12} md={12} xs={12}>\r\n                                        <div className=\"big-box\">\r\n                                            <DataChart data={data} />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col lg={5} sm={12} md={12} xs={12} className=\"pl-0\">\r\n                                        <div className=\"big-box\">\r\n                                            <div className=\"big-header \">\r\n                                                <h6>Suyun kimyəvi tərkibi</h6>\r\n                                            </div>\r\n                                            <ApexChart data={data} />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col lg={7}>\r\n                                        <div className=\"big-box big-box-2 w-100\">\r\n                                            <Row className=\"justify-content-around p-2\">\r\n                                                <Col lg={3} className=\"text-center\">\r\n                                                    <Circle\r\n                                                        animate={true}\r\n                                                        animationDuration=\"1s\"\r\n                                                        responsive={true}\r\n                                                        progress={data === null ? 0 : data.WaterAcidity}\r\n                                                        size={15}\r\n                                                        progressColor=\"#9bdeac\"\r\n                                                        showPercentageSymbol={false}\r\n                                                    />\r\n\r\n                                                    <h6>Suyun turşuluğu (pH)</h6>\r\n                                                </Col>\r\n                                                <Col lg={3} className=\"text-center\">\r\n                                                    <Circle\r\n                                                        animate={true}\r\n                                                        animationDuration=\"1s\"\r\n                                                        responsive={true}\r\n                                                        progress={data === null ? 0 : data.SalinityOfWater}\r\n                                                        showPercentageSymbol={false}\r\n                                                    />\r\n\r\n                                                    <h6>Suyun duzluluğu</h6>\r\n                                                </Col>\r\n                                                <Col lg={3} className=\"text-center\">\r\n                                                    <Circle\r\n                                                        animate={true}\r\n                                                        animationDuration=\"1s\"\r\n                                                        responsive={true}\r\n                                                        progress={data === null ? 0 : data.WaterTemperature}\r\n                                                        progressColor=\"#d92027\"\r\n                                                        showPercentageSymbol={false}\r\n                                                    />\r\n\r\n                                                    <h6>Suyun temperaturu</h6>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col lg={5} className=\"pl-0\">\r\n                                        <Row>\r\n                                            <Col lg={12}>\r\n\r\n                                                <div className=\"big-box big-box-2\">\r\n                                                    <div className=\"big-header \">\r\n                                                        <h6>Suyun yararlılığı haqqında Məlumat</h6>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        test\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={2} style={{ height: \"auto\" }} className=\"mb-2 bg-white big-box mt-3\">\r\n                        <div className=\"big-header pl-0 pr-0 pt-2 pb-2\">\r\n                            <h6>Cihazın yerləşmə nöqtəsi</h6>\r\n                        </div>\r\n                        <div style={{ height: \"150px\" }} className=\"map w-100\">\r\n                            <iframe title=\"map\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3032.4463740276674!2d49.920235515399455!3d40.53172637935183!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNDDCsDMxJzU0LjIiTiA0OcKwNTUnMjAuNyJF!5e0!3m2!1sen!2s!4v1593886057478!5m2!1sen!2s\" frameBorder=\"0\" style={{ width: \"100%\", height: \"100%\", border: 0 }} allowFullScreen=\"\" aria-hidden=\"false\" tabIndex=\"0\"></iframe>\r\n                        </div>\r\n                        <ul className=\"list-ul\">\r\n                            <li className=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    <div>2020-07-06</div>\r\n                                    <div>05:30</div>\r\n                                </div>\r\n                                <div>\r\n                                    <svg fill=\"#0166ff\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 6v8h7v-2h-5v-6h-2zm10.854 7.683l1.998.159c-.132.854-.351 1.676-.652 2.46l-1.8-.905c.2-.551.353-1.123.454-1.714zm-2.548 7.826l-1.413-1.443c-.486.356-1.006.668-1.555.933l.669 1.899c.821-.377 1.591-.844 2.299-1.389zm1.226-4.309c-.335.546-.719 1.057-1.149 1.528l1.404 1.433c.583-.627 1.099-1.316 1.539-2.058l-1.794-.903zm-20.532-5.2c0 6.627 5.375 12 12.004 12 1.081 0 2.124-.156 3.12-.424l-.665-1.894c-.787.2-1.607.318-2.455.318-5.516 0-10.003-4.486-10.003-10s4.487-10 10.003-10c2.235 0 4.293.744 5.959 1.989l-2.05 2.049 7.015 1.354-1.355-7.013-2.184 2.183c-2.036-1.598-4.595-2.562-7.385-2.562-6.629 0-12.004 5.373-12.004 12zm23.773-2.359h-2.076c.163.661.261 1.344.288 2.047l2.015.161c-.01-.755-.085-1.494-.227-2.208z\" /></svg>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    <div>2020-07-06</div>\r\n                                    <div>11:23</div>\r\n                                </div>\r\n                                <div>\r\n                                    <svg fill=\"#0166ff\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 6v8h7v-2h-5v-6h-2zm10.854 7.683l1.998.159c-.132.854-.351 1.676-.652 2.46l-1.8-.905c.2-.551.353-1.123.454-1.714zm-2.548 7.826l-1.413-1.443c-.486.356-1.006.668-1.555.933l.669 1.899c.821-.377 1.591-.844 2.299-1.389zm1.226-4.309c-.335.546-.719 1.057-1.149 1.528l1.404 1.433c.583-.627 1.099-1.316 1.539-2.058l-1.794-.903zm-20.532-5.2c0 6.627 5.375 12 12.004 12 1.081 0 2.124-.156 3.12-.424l-.665-1.894c-.787.2-1.607.318-2.455.318-5.516 0-10.003-4.486-10.003-10s4.487-10 10.003-10c2.235 0 4.293.744 5.959 1.989l-2.05 2.049 7.015 1.354-1.355-7.013-2.184 2.183c-2.036-1.598-4.595-2.562-7.385-2.562-6.629 0-12.004 5.373-12.004 12zm23.773-2.359h-2.076c.163.661.261 1.344.288 2.047l2.015.161c-.01-.755-.085-1.494-.227-2.208z\" /></svg>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    <div>2020-04-03</div>\r\n                                    <div>02:10</div>\r\n                                </div>\r\n                                <div>\r\n                                    <svg fill=\"#0166ff\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 6v8h7v-2h-5v-6h-2zm10.854 7.683l1.998.159c-.132.854-.351 1.676-.652 2.46l-1.8-.905c.2-.551.353-1.123.454-1.714zm-2.548 7.826l-1.413-1.443c-.486.356-1.006.668-1.555.933l.669 1.899c.821-.377 1.591-.844 2.299-1.389zm1.226-4.309c-.335.546-.719 1.057-1.149 1.528l1.404 1.433c.583-.627 1.099-1.316 1.539-2.058l-1.794-.903zm-20.532-5.2c0 6.627 5.375 12 12.004 12 1.081 0 2.124-.156 3.12-.424l-.665-1.894c-.787.2-1.607.318-2.455.318-5.516 0-10.003-4.486-10.003-10s4.487-10 10.003-10c2.235 0 4.293.744 5.959 1.989l-2.05 2.049 7.015 1.354-1.355-7.013-2.184 2.183c-2.036-1.598-4.595-2.562-7.385-2.562-6.629 0-12.004 5.373-12.004 12zm23.773-2.359h-2.076c.163.661.261 1.344.288 2.047l2.015.161c-.01-.755-.085-1.494-.227-2.208z\" /></svg>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageOne\r\n","import React, { useEffect, useState } from 'react'\r\nimport { socket } from \"./Components/socket\"\r\n//  import axios from \"axios\"\r\nimport PageOne from './Components/PageOne'\r\n\r\nfunction App() {\r\n\r\n\r\n    const [data, setData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        socket.onopen = () => {\r\n            console.log(\"connected to websocket\")\r\n        }\r\n        socket.onmessage = (event) => {\r\n            setData(JSON.parse(event.data))\r\n        }\r\n\r\n        socket.onerror = (error) => {\r\n            console.log(error)\r\n        }\r\n\r\n        // axios.get(`http://64.227.107.166/data`)\r\n        //     .then(res => {\r\n        //         const persons = res.data;\r\n\r\n        //     })\r\n\r\n        return () => {\r\n            socket.onclose = () => {\r\n                console.log('disconnected')\r\n            }\r\n        }\r\n    }, [data])\r\n\r\n    return (\r\n        <div>\r\n            <PageOne data={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/scss/bootstrap.scss\"\nimport './assets/css/style.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}